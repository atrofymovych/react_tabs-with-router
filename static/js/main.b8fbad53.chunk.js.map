{"version":3,"sources":["pages/Page.tsx","tabs.ts","TabContext.tsx","components/TabContent.tsx","components/TabList.tsx","App.tsx","index.tsx"],"names":["TabsPage","className","tabs","id","title","content","initialTabContext","selectedTab","setSelectedTab","TabContext","createContext","TabContent","children","useState","contextValue","Provider","value","useContext","tabId","useParams","map","tab","includes","filteredTabs","filter","TabList","cn","to","classChange","isActive","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,EAAW,WACtB,OACE,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,OAIP,E,OCRYC,EAAc,CACzB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gB,OCEpCC,EAAoC,CACxCC,YAAa,GACbC,eAAgB,WAAQ,GAGbC,EAAaC,wBAA8BJ,GAM3CK,EAAwC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtD,EAAsCC,mBAAiB,IAAvD,mBAEMC,EAA+B,CACnCP,YAHF,KAIEC,eAJF,MAOA,OACE,cAACC,EAAWM,SAAZ,CAAqBC,MAAOF,EAA5B,SACGF,GAGN,EC1BYD,EAAa,WACxB,IAAQH,EAAmBS,qBAAWR,GAA9BD,eAEAU,EAAUC,cAAVD,MAER,IAAKA,IACFhB,EAAKkB,KAAI,SAAAC,GAAG,OAAIA,EAAIlB,EAAR,IAAYmB,SAASJ,GAElC,OACE,qBAAKjB,UAAU,QAAQ,UAAQ,aAA/B,iCAMJ,IAAMsB,EAAerB,EAAKsB,QAAO,SAACH,GAAD,OAASA,EAAIlB,KAAOe,CAApB,IAIjC,OAFAV,EAAeU,GAGb,qBAAKjB,UAAU,QAAQ,UAAQ,aAA/B,SACGsB,EAAaH,KAAI,SAACC,GAAD,OAChB,8BAAmBA,EAAIhB,SAAbgB,EAAIlB,GADE,KAKvB,ECxBYsB,EAAU,WACrB,IAAQlB,EAAgBU,qBAAWR,GAA3BF,YAER,OACE,qCACE,oBAAIN,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGC,EAAKkB,KAAI,SAAAC,GACR,OACE,oBACE,UAAQ,MACRpB,UACEyB,IACE,GACA,CAAE,YAAaL,EAAIlB,KAAOI,IALhC,SASE,cAAC,IAAD,CAAMoB,GAAE,UAAKN,EAAIlB,IAAjB,mBAA2BkB,EAAIlB,OAGpC,QAIL,cAAC,EAAD,MAGL,ECpBKyB,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAoCH,IACtD,cAAe,CACb,YAAaG,GAFG,EAMPC,EAAM,kBACjB,qCAEE,qBACE7B,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAS0B,GAAG,IAAI1B,UAAW2B,EAA3B,kBACA,cAAC,IAAD,CAASD,GAAG,QAAQ1B,UAAW2B,EAA/B,yBAKN,cAAC,IAAD,UACE,eAAC,IAAD,CAAOG,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAI/B,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAO8B,KAAK,OAAOC,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOD,KAAK,cAEd,cAAC,IAAD,CAAOA,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUL,GAAG,QACzC,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAAS,oBAAI/B,UAAU,QAAd,qCAtBd,EClBnBiC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,Q","file":"static/js/main.b8fbad53.chunk.js","sourcesContent":["import { Outlet } from 'react-router-dom';\n\nexport const TabsPage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n","import { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import React, { useState, createContext, ReactNode } from 'react';\n\ntype TabContextType = {\n  selectedTab: string;\n  setSelectedTab: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst initialTabContext: TabContextType = {\n  selectedTab: '',\n  setSelectedTab: () => {},\n};\n\nexport const TabContext = createContext<TabContextType>(initialTabContext);\n\ntype TabContentProps = {\n  children: ReactNode;\n};\n\nexport const TabContent: React.FC<TabContentProps> = ({ children }) => {\n  const [selectedTab, setSelectedTab] = useState<string>('');\n\n  const contextValue: TabContextType = {\n    selectedTab,\n    setSelectedTab,\n  };\n\n  return (\n    <TabContext.Provider value={contextValue}>\n      {children}\n    </TabContext.Provider>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { tabs } from '../tabs';\nimport { TabContext } from '../TabContext';\n\nexport const TabContent = () => {\n  const { setSelectedTab } = useContext(TabContext);\n\n  const { tabId } = useParams();\n\n  if (!tabId || (\n    !tabs.map(tab => tab.id).includes(tabId)\n  )) {\n    return (\n      <div className=\"block\" data-cy=\"TabContent\">\n        Please select a tab\n      </div>\n    );\n  }\n\n  const filteredTabs = tabs.filter((tab) => tab.id === tabId);\n\n  setSelectedTab(tabId);\n\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {filteredTabs.map((tab) => (\n        <div key={tab.id}>{tab.content}</div>\n      ))}\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport cn from 'classnames';\nimport { tabs } from '../tabs';\nimport { TabContent } from './TabContent';\nimport { TabContext } from '../TabContext';\n\nexport const TabList = () => {\n  const { selectedTab } = useContext(TabContext);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                data-cy=\"Tab\"\n                className={\n                  cn(\n                    '',\n                    { 'is-active': tab.id === selectedTab },\n                  )\n                }\n              >\n                <Link to={`${tab.id}`}>{`${tab.id}`}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <TabContent />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { TabsPage } from './pages/Page';\nimport { TabList } from './components/TabList';\n\ntype ClassChangeProps = {\n  isActive: boolean;\n};\n\nconst classChange = ({ isActive }: ClassChangeProps) => cn(\n  'navbar-item', {\n    'is-active': isActive,\n  },\n);\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={classChange}>Home</NavLink>\n          <NavLink to=\"/tabs\" className={classChange}>Tabs</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <Routes>\n      <Route path=\"/\" element={<TabsPage />}>\n        <Route index element={<h1 className=\"title\">Home page</h1>} />\n        <Route path=\"tabs\" element={<TabList />}>\n          <Route path=\":tabId?\" />\n        </Route>\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { TabContent } from './TabContext';\n\nReactDOM.render(\n  <HashRouter>\n    <TabContent>\n      <App />\n    </TabContent>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}